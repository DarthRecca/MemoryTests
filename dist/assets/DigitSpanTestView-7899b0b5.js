import{u as P}from"./tests-8bbcdce3.js";import{_ as y}from"./_plugin-vue_export-helper-c27b6911.js";import{o as s,c as b,w as n,az as o,aB as _,aA as l,a as d,F as w,aJ as x,d as a,b as e,aK as I,aL as T,aC as v}from"./index-5dc12fdf.js";import{V as D,a as N}from"./VRow-089cef26.js";import{V as p}from"./VBtn-670ec393.js";import{V as $}from"./VContainer-f527d4de.js";function F(t){const i=Array.from({length:10},(c,r)=>r);let m="";for(let c=0;c<t;c++){const r=Math.floor(Math.random()*i.length),u=i.splice(r,1)[0];m+=u}return m}const V={data(){return{showPrompt:!0,showResult:!1,prompt:"",digit:"",userInput:"",digitIndex:2,result:"",correctCount:0,incorrectCount:0,digitSpanTestData:{individualPromptData:[],highestDigitSpan:0},numpadDisabled:Array(10).fill(!1),numpadNumbers:[7,8,9,4,5,6,1,2,3,0],enteredNumbers:"",testCompleted:!1}},methods:{onNumpadClick(t){t!=="Backspace"&&(this.userInput+=t,this.numpadDisabled[t]=!0,this.enteredNumbers+=t)},backspace(){const t=this.userInput.slice(-1);this.numpadDisabled[t]=!1,this.userInput=this.userInput.slice(0,-1),this.enteredNumbers=this.enteredNumbers.slice(0,-1)},nextDigitSpan(){this.prompt=F(this.digitIndex),this.digitIndex<10&&this.digitDisplay(this.prompt,0)},digitDisplay(t,i){i<this.digitIndex?(this.digit=t.charAt(i),setTimeout(()=>{this.digitDisplay(t,i+1)},2e3)):this.showPrompt=!1},checkAnswer(){this.userInput===this.prompt?(this.result="correct",this.correctCount++):(this.result="incorrect",this.incorrectCount++);const t={prompt:this.prompt,answer:this.userInput,result:this.result};this.digitSpanTestData.individualPromptData.push(t),this.userInput="",this.enteredNumbers="",this.resetNumpad(),this.digitIndex<10?(this.correctCount===2&&(this.digitIndex++,this.correctCount=0,this.incorrectCount=0),this.incorrectCount===2&&(this.correctCount=0,this.incorrectCount=0,this.completedTest()),this.showPrompt=!0,this.nextDigitSpan()):this.completedTest()},resetNumpad(){for(let t=0;t<=9;t++)this.numpadDisabled[t]=!1},completedTest(){this.showResult=!0,this.digitSpanTestData.highestDigitSpan=this.digitIndex-1,P().addDigitSpanTestData(this.digitSpanTestData),this.testCompleted=!0}},mounted(){this.nextDigitSpan()}},g=t=>(I("data-v-9be99927"),t=t(),T(),t),z={key:0,class:"digit-span-test"},A={key:0,class:"digit-span-prompt"},R={key:1},B=g(()=>e("h2",null,"Entered Numbers",-1)),E={key:0,class:"entered-numbers"},q=g(()=>e("br",null,null,-1)),M={key:1},Y=g(()=>e("h2",null,"Test Completed",-1)),L=g(()=>e("br",null,null,-1)),O=g(()=>e("br",null,null,-1)),H=g(()=>e("br",null,null,-1)),J=g(()=>e("br",null,null,-1));function K(t,i,m,c,r,u){return s(),b($,{class:"digit-span-test-container"},{default:n(()=>[this.testCompleted?l("",!0):(s(),o("div",z,[r.showPrompt?(s(),o("h1",A,_(this.digit),1)):l("",!0),r.showPrompt?l("",!0):(s(),o("div",R,[B,r.showPrompt?l("",!0):(s(),o("h2",E,_(r.enteredNumbers),1)),d(N,{class:"numpad"},{default:n(()=>[(s(!0),o(w,null,x(r.numpadNumbers,(h,C)=>(s(),b(D,{key:C,cols:"3"},{default:n(()=>[d(p,{onClick:k=>u.onNumpadClick(h),disabled:r.numpadDisabled[h],class:"numpad-button",size:"large"},{default:n(()=>[a(_(h),1)]),_:2},1032,["onClick","disabled"])]),_:2},1024))),128)),d(D,{cols:"6"},{default:n(()=>[d(p,{onClick:u.backspace,class:"backspace-button",size:"large"},{default:n(()=>[a(" Clear ")]),_:1},8,["onClick"])]),_:1})]),_:1}),q])),r.showPrompt?l("",!0):(s(),b(p,{key:2,onClick:u.checkAnswer,size:"x-large",color:"red-lighten-3",rounded:"lg",cols:"12"},{default:n(()=>[a("Enter")]),_:1},8,["onClick"]))])),this.testCompleted?(s(),o("div",M,[Y,L,O,e("div",null,[e("h3",null,"Your best sequence that is maximum length of digits that you can remember (Digit Span) is: "+_(this.digitSpanTestData.highestDigitSpan),1),H]),J,d(p,{value:"StroopLink",to:"/strooptest",size:"x-large",block:"",color:"red-lighten-3",rounded:"lg"},{default:n(()=>[a("Next")]),_:1})])):l("",!0)]),_:1})}const j=y(V,[["render",K],["__scopeId","data-v-9be99927"]]);function G(t){const i=Array.from({length:10},(c,r)=>r);let m="";for(let c=0;c<t;c++){const r=Math.floor(Math.random()*i.length),u=i.splice(r,1)[0];m+=u}return m}const Q={data(){return{showPrompt:!0,showResult:!1,prompt:"",digit:"",userInput:"",digitIndex:2,result:"",correctCount:0,incorrectCount:0,numpadDisabled:Array(10).fill(!1),numpadNumbers:[7,8,9,4,5,6,1,2,3,0],enteredNumbers:"",testCompleted:!1}},methods:{onNumpadClick(t){t!=="Backspace"&&(this.userInput+=t,this.numpadDisabled[t]=!0,this.enteredNumbers+=t)},backspace(){const t=this.userInput.slice(-1);this.numpadDisabled[t]=!1,this.userInput=this.userInput.slice(0,-1),this.enteredNumbers=this.enteredNumbers.slice(0,-1)},nextDigitSpan(){this.prompt=G(this.digitIndex),this.digitIndex<10&&this.digitDisplay(this.prompt,0)},digitDisplay(t,i){i<this.digitIndex?(this.digit=t.charAt(i),setTimeout(()=>{this.digitDisplay(t,i+1)},1e3)):this.showPrompt=!1},checkAnswer(){this.userInput===this.prompt?(this.result="Correct",this.correctCount++):(this.result="Incorrect",this.incorrectCount++),this.userInput="",this.enteredNumbers="",this.resetNumpad(),this.digitIndex<=3?(this.correctCount===2&&(this.digitIndex++,this.correctCount=0,this.incorrectCount=0),this.incorrectCount===2&&(this.correctCount=0,this.incorrectCount=0,this.completedTest()),this.showPrompt=!0,this.nextDigitSpan()):this.completedTest()},resetNumpad(){for(let t=0;t<=9;t++)this.numpadDisabled[t]=!1},completedTest(){this.showResult=!0,this.testCompleted=!0}},mounted(){this.nextDigitSpan()}},S=t=>(I("data-v-6eb296fa"),t=t(),T(),t),U={key:0,class:"digit-span-test"},W={key:0,class:"digit-span-prompt"},X={key:1,class:"entered-numbers"},Z={key:2},tt=S(()=>e("h2",null,"Entered Numbers",-1)),et=S(()=>e("br",null,null,-1)),st={key:1},it=S(()=>e("p",null,"Trial Completed",-1)),rt=S(()=>e("br",null,null,-1));function ot(t,i,m,c,r,u){return s(),b($,{class:"digit-span-test-container"},{default:n(()=>[this.testCompleted?l("",!0):(s(),o("div",U,[r.showPrompt?(s(),o("h1",W,_(this.digit),1)):l("",!0),r.showPrompt?l("",!0):(s(),o("h2",X,_(r.enteredNumbers),1)),r.showPrompt?l("",!0):(s(),o("div",Z,[tt,d(N,{class:"numpad"},{default:n(()=>[(s(!0),o(w,null,x(r.numpadNumbers,(h,C)=>(s(),b(D,{key:C,cols:"3"},{default:n(()=>[d(p,{onClick:k=>u.onNumpadClick(h),disabled:r.numpadDisabled[h],class:"numpad-button",size:"large"},{default:n(()=>[a(_(h),1)]),_:2},1032,["onClick","disabled"])]),_:2},1024))),128)),d(D,{cols:"6"},{default:n(()=>[d(p,{onClick:u.backspace,class:"backspace-button",size:"large"},{default:n(()=>[a(" Clear ")]),_:1},8,["onClick"])]),_:1})]),_:1}),et])),r.showPrompt?l("",!0):(s(),b(p,{key:3,onClick:u.checkAnswer,size:"x-large",color:"red-lighten-3",rounded:"lg",cols:"12"},{default:n(()=>[a("Enter")]),_:1},8,["onClick"]))])),this.testCompleted?(s(),o("div",st,[it,rt,d(p,{onClick:i[0]||(i[0]=h=>t.$emit("trial-completed")),size:"x-large",block:"",color:"red-lighten-3",rounded:"lg"},{default:n(()=>[a("Next")]),_:1})])):l("",!0)]),_:1})}const nt=y(Q,[["render",ot],["__scopeId","data-v-6eb296fa"]]);const lt={name:"DigitSpanTestView",data(){return{testStartFlag:!1,trialStartFlag:!1,trialCompleted:!1}},components:{DigitSpanTest:j,DigitSpanTrial:nt},methods:{startTest(){this.testStartFlag=!0},startTrial(){this.trialStartFlag=!0},completedTrial(){this.trialCompleted=!0}}},f=t=>(I("data-v-6b8e7d9e"),t=t(),T(),t),at=f(()=>e("div",{class:"digit-span-test-title"},[e("h1",null,"Digit Span Test")],-1)),dt={key:0,class:"instructions"},ut=f(()=>e("h2",{class:"instructions-title"},"Instructions",-1)),ct=f(()=>e("p",null,[a(" In this experiment, you will be shown a sequence of numbers on the screen. These numbers are called digits."),e("br"),a(" You need to remember the sequence and enter it into the space provided on the screen when prompted."),e("br"),a(" If you make mistakes while entering the sequence, you can correct the last mistake using the Clear button."),e("br"),a(" Once you have entered all of the digits, press the ENTER button."),e("br"),a(" The length of the digit sequence will start from 2 and will increase until you are no longer able to remember it."),e("br"),a(" You will be given three trials for each length."),e("br"),a(" If you successfully complete two of the three trials for a given length, you will move on to the next length. Otherwise, the test will end."),e("br")],-1)),ht=f(()=>e("br",null,null,-1)),pt=[ut,ct,ht],mt={key:1,class:"real-test-indicator"},_t=f(()=>e("h2",null,[e("p",null,"Your Real Test Starts Now!")],-1)),gt=f(()=>e("br",null,null,-1)),ft={key:0,class:"start-button"},bt={key:2,class:"start-button"},Ct=f(()=>e("br",null,null,-1)),kt={key:3},Dt={key:4};function St(t,i,m,c,r,u){const h=v("DigitSpanTrial"),C=v("DigitSpanTest");return s(),o(w,null,[at,!this.testStartFlag&&!this.trialStartFlag&&!this.trialCompleted?(s(),o("div",dt,pt)):l("",!0),this.trialCompleted&&!this.testStartFlag?(s(),o("div",mt,[_t,gt,!this.testStartFlag&&this.trialCompleted?(s(),o("div",ft,[d(p,{onClick:i[0]||(i[0]=k=>this.startTest()),size:"x-large",block:"",color:"red-lighten-3",rounded:"lg"},{default:n(()=>[a("Click Here to Start Test")]),_:1})])):l("",!0)])):l("",!0),!this.testStartFlag&&!this.trialStartFlag?(s(),o("div",bt,[d(p,{onClick:i[1]||(i[1]=k=>this.startTrial()),size:"x-large",block:"",color:"red-lighten-3",rounded:"lg"},{default:n(()=>[a(" Start Trial ")]),_:1})])):l("",!0),Ct,this.trialStartFlag&&!this.trialCompleted?(s(),o("div",kt,[d(h,{onTrialCompleted:i[2]||(i[2]=k=>this.completedTrial())})])):l("",!0),this.trialCompleted&&this.testStartFlag?(s(),o("div",Dt,[d(C)])):l("",!0)],64)}const Nt=y(lt,[["render",St],["__scopeId","data-v-6b8e7d9e"]]);export{Nt as default};
